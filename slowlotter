res = require('resources')
require('coroutine')
local recipes = require('recipes')

lottingList = S{
	549, --delkfutt key
	1090, --bomb coal
	1089, --exoray mold
}

inventory_id = res.bags:with('english', 'Inventory').id
inventoryPresent = false
delay = 3

function slowLot()
   local items = windower.ffxi.get_items()
   windower.add_to_chat(141,'I am here.')
	--Checks for item in inventory and if it is seen, return from function
   for index, item in pairs(items.inventory) do
		if type(item) == 'table' and lottingList:contains(item.id) then
			inventoryPresent = true
			windower.add_to_chat(141,'Item is present in inventory.')
			return inventoryPresent --adjust inventoryPresent global and escape function
		end
	end
	for index, item in pairs(items.treasure) do
        if not inventoryPresent and type(item) == 'table' and lottingList:contains(item.id) then
			windower.ffxi.lot_item(index)
			windower.add_to_chat(141,'Item is present in treasury pool.')
			return --return no value in this case just to escape function
		end
    end
end

code = {}
code.repeatSynthScheduled = false

--Crafts # of each card in inventory at specific time
function repeatSynth()
	-- bagTable = windower.ffxi.get_items.inventory
	-- log(bagTable)
    code.repeatSynthScheduled = false
    local player = windower.ffxi.get_player()
    if not player then
        code.repeatSynthScheduled = true
        coroutine.schedule(repeatSynth, settings.Delay)
        return  
    elseif player.status > 0 then
        --print('Busy status %s':format(res.statuses[player.status].english))
        code.repeatSynthScheduled = true
        coroutine.schedule(repeatSynth, 2)
        return
    end
    local items = windower.ffxi.get_items(inventory_id)
	for index,item in pairs(windower.ffxi.get_items(inventory_id)) do
		--flog(filename, table.tovstring(item))
		--windower.add_to_chat(141, 'File created with search data named: '..filename)
		if type(item) == 'table' and item.id == 549 then --delkfutt key
			craft_item(item.id)
			return
		elseif type(item) == 'table' and item.id == 1089 then --bomb coal
			craft_item(item.id)
			return
		elseif type(item) == 'table' and item.id == 1090 then --exoray mold
			craft_item(item.id)
			return
		else end
	end
	return
end

--returns a string of the item name based on item id provided
function returnName(id)
	local itemName = ''
	for index, item in pairs(res.items) do
		if index == id then
			itemName = item.en
			return item.en
		end
	end	
end

--returns a recipe name from recipes.lua based on item name (same as escutcheons/craft/cardsynth
function fetch_recipe_name(item_name)
    local item = item_name:lower()
    for recipe_name, recipe in pairs(recipes) do
        for i, ingredient in pairs(recipe['ingredients']) do
            if item == ingredient:lower() then
                return recipe_name
            end
        end        
    end
    return ''
end

--sends command to craft with item id
function craft_item(id)
    local item_name = res.items[id].name
    local recipe_name = fetch_recipe_name(item_name)        
    if recipe_name:len() then
        windower.send_command('craft make \"'..recipe_name..'\"')
    end                   
end

--addOn Commands
windower.register_event('addon command',function (cmd,cmd2,...)
	local arg = T{...} or {}
    if cmd == 'lot' or cmd == 'l' then
        coroutine.schedule(slowLot, delay)
	elseif cmd == 'craft' or cmd == 'c' then
		repeatSynth()
	end
end)
